---

- hosts: all
  vars_files:
    - cis_vars.yml

  tasks:
# PRELIM WORKSPACE SETUP (NEEDED FOR CLEANUP)
  - name: check for workspace
    stat:
      path: "{{ WORKSPACE_PATH }}"
    register: sym

  - debug: { msg: "{{ sym }}" }

  - name: create workspace dir if not exist
    file:
      path: "{{ WORKSPACE_PATH }}"
      state: directory
    when: sym.stat.exists == false
    become: yes


# AUDIT
  - name: Check for Enabled Services
    command: "systemctl is-enabled {{item}}"
    with_items: "{{ DEFAULT_ENABLED_SERVICES }}"
    ignore_errors: yes
    register: DEFAULT_ENABLED_SERVICES_STATE



# CREATE/UPDATE
#   INSTALL PACKAGES FROM CIS_VAR INSTALL LIST
  - name: Install Basic Packages
    action: >
      {{ ansible_pkg_mgr }} name={{ item }} state=present update_cache=yes
    with_items: "{{ INSTALL_DEFAULT_PKGS }}"
    become: yes

#   REMOVE PACKAGES FROM CIS_VAR REMOVE LIST
  - name: Remove Problematic Packages
    action: >
      {{ ansible_pkg_mgr }} name={{ item }} state=absent update_cache=yes
    with_items: "{{ REMOVE_DEFAULT_PKGS }}"
    become: yes
    ignore_errors: yes

  - name: Generate CIS.conf module blacklist
    template:
      backup: yes
      src: templates/cis.j2
      dest: /etc/modprobe.d/cis.conf
    become: yes

  - name: Generate sysctl.conf defaults
    template:
      backup: yes
      src: templates/sysctl.conf.j2
      dest: /etc/sysctl.conf
    become: yes

  - name: Configure sysctl.conf cronjob to address debian bug during reboot
    cron:
      name: "sysctl bug resolution"
      special_time: reboot
      job: "/bin/sleep 5 && /sbin/sysctl --system"
      cron_file: '/etc/crontab'
      user: root
      state: present
      disabled: "{{ DISABLE_SYSCTL_BUGFIX }}"
      backup: yes
    become: yes

  - name: Reload sysctl from config
    command: "sysctl --system"
    become: yes

  - name: Enable default CIS systemd services
    service:
      name: "{{ item }}"
      state: restarted
    with_items: "{{DEFAULT_ENABLED_SERVICES}}"
    become: yes
    ignore_errors: yes

  - name: Disable default CIS systemd services
    service:
      name: "{{ item }}"
      state: stopped
    with_items: "{{DEFAULT_DISABLED_SERVICES}}"
    become: yes
    ignore_errors: yes

  - name: Disable Prelink
    command: "prelink -ua"
    ignore_errors: yes

  - name: Set Sticky bit on world writables
    shell: "df --local -P | grep -v 'snap' | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type d -perm -0002 2>/dev/null | xargs chmod a+t"
    become: yes

# BANNER WARNINGS
  - name: Set motd (postlogin)
    template:
      src: templates/banner.j2
      dest: "{{ item }}"
    with_items:
     - /etc/motd
     - /etc/issue
     - /etc/issue.net
    become: yes


#  - name: Set issue (prelogin)

#  - name: Set issue.net (prelogin remote)



# CLEANUP TEMPLATE BACKUPS

  - name: Find Ansible Backups for Cleanup
    find:
      paths: '/etc'
      patterns: "{{ TEMPLATE_FILES }}"
      recurse: yes
    register: find_results

  - name: Move Template Backups from sensitive folders to
    command: "mv {{item['path'] }} {{ WORKSPACE_PATH }}"
    with_items: "{{ find_results['files'] }}"
    become: yes
    when: find_results['files'] is defined
